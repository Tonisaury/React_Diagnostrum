{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tosag\\\\OneDrive\\\\Escritorio\\\\My projects\\\\Python scripts\\\\Diagnostrum\\\\React_Diagnostrum\\\\src\\\\AppointmentsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentsContext = /*#__PURE__*/createContext();\nexport function useAppointments() {\n  _s();\n  return useContext(AppointmentsContext);\n}\n_s(useAppointments, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AppointmentsProvider = ({\n  children\n}) => {\n  _s2();\n  const [appointments, setAppointments] = useState([]);\n\n  // Define backendURL using the environment variable\n  const backendURL = process.env.REACT_APP_BACKEND_URL;\n  const fetchAppointments = useCallback(async () => {\n    // Directly use axios.get without assigning to `response` if not using `response` elsewhere\n    await axios.get(`${backendURL}/appointments/latest`).then(response => setAppointments(response.data.reverse())); // Reverse to display new appointments at the top\n  }, [backendURL]); // Include backendURL in the dependency array to adhere to the rule of hooks\n\n  const addAppointment = async appointmentData => {\n    // Similar approach as `fetchAppointments` if `response` isn't used elsewhere\n    console.log(appointmentData);\n    await axios.post(`${backendURL}/appointments`, appointmentData).then(() => fetchAppointments()); // No need to assign to `response` if not using it\n  };\n  const deleteAppointment = async appointmentId => {\n    await axios.delete(`${backendURL}/appointments/${appointmentId}`).then(() => fetchAppointments()); // Re-fetch appointments to reflect the deletion\n  };\n  return /*#__PURE__*/_jsxDEV(AppointmentsContext.Provider, {\n    value: {\n      appointments,\n      addAppointment,\n      deleteAppointment,\n      fetchAppointments\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s2(AppointmentsProvider, \"oVwkcsl/0GyYKViEP2P6xMdCTRY=\");\n_c = AppointmentsProvider;\nvar _c;\n$RefreshReg$(_c, \"AppointmentsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","axios","jsxDEV","_jsxDEV","AppointmentsContext","useAppointments","_s","AppointmentsProvider","children","_s2","appointments","setAppointments","backendURL","process","env","REACT_APP_BACKEND_URL","fetchAppointments","get","then","response","data","reverse","addAppointment","appointmentData","console","log","post","deleteAppointment","appointmentId","delete","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tosag/OneDrive/Escritorio/My projects/Python scripts/Diagnostrum/React_Diagnostrum/src/AppointmentsContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AppointmentsContext = createContext();\r\n\r\nexport function useAppointments() {\r\n  return useContext(AppointmentsContext);\r\n}\r\n\r\nexport const AppointmentsProvider = ({ children }) => {\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  // Define backendURL using the environment variable\r\n  const backendURL = process.env.REACT_APP_BACKEND_URL;\r\n\r\n  const fetchAppointments = useCallback(async () => {\r\n    // Directly use axios.get without assigning to `response` if not using `response` elsewhere\r\n    await axios.get(`${backendURL}/appointments/latest`)\r\n      .then(response => setAppointments(response.data.reverse())); // Reverse to display new appointments at the top\r\n  }, [backendURL]); // Include backendURL in the dependency array to adhere to the rule of hooks\r\n\r\n  const addAppointment = async (appointmentData) => {\r\n    // Similar approach as `fetchAppointments` if `response` isn't used elsewhere\r\n    console.log(appointmentData)\r\n    await axios.post(`${backendURL}/appointments`, appointmentData)\r\n      .then(() => fetchAppointments()); // No need to assign to `response` if not using it\r\n  };\r\n\r\n  const deleteAppointment = async (appointmentId) => {\r\n    await axios.delete(`${backendURL}/appointments/${appointmentId}`)\r\n      .then(() => fetchAppointments()); // Re-fetch appointments to reflect the deletion\r\n  };\r\n\r\n  return (\r\n    <AppointmentsContext.Provider value={{ appointments, addAppointment, deleteAppointment, fetchAppointments }}>\r\n      {children}\r\n    </AppointmentsContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAAmB,gBAAGP,aAAa,CAAC,CAAC;AAE3C,OAAO,SAASQ,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAChC,OAAOR,UAAU,CAACM,mBAAmB,CAAC;AACxC;AAACE,EAAA,CAFeD,eAAe;AAI/B,OAAO,MAAME,oBAAoB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACpD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMa,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;EAEpD,MAAMC,iBAAiB,GAAGhB,WAAW,CAAC,YAAY;IAChD;IACA,MAAMC,KAAK,CAACgB,GAAG,CAAE,GAAEL,UAAW,sBAAqB,CAAC,CACjDM,IAAI,CAACC,QAAQ,IAAIR,eAAe,CAACQ,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,CAAC,EAAE,CAACT,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB,MAAMU,cAAc,GAAG,MAAOC,eAAe,IAAK;IAChD;IACAC,OAAO,CAACC,GAAG,CAACF,eAAe,CAAC;IAC5B,MAAMtB,KAAK,CAACyB,IAAI,CAAE,GAAEd,UAAW,eAAc,EAAEW,eAAe,CAAC,CAC5DL,IAAI,CAAC,MAAMF,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,MAAMW,iBAAiB,GAAG,MAAOC,aAAa,IAAK;IACjD,MAAM3B,KAAK,CAAC4B,MAAM,CAAE,GAAEjB,UAAW,iBAAgBgB,aAAc,EAAC,CAAC,CAC9DV,IAAI,CAAC,MAAMF,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,oBACEb,OAAA,CAACC,mBAAmB,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAErB,YAAY;MAAEY,cAAc;MAAEK,iBAAiB;MAAEX;IAAkB,CAAE;IAAAR,QAAA,EACzGA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEnC,CAAC;AAAC1B,GAAA,CA7BWF,oBAAoB;AAAA6B,EAAA,GAApB7B,oBAAoB;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}