{"ast":null,"code":"import React,{useState}from'react';import'./CreateAppointment.css';import{useAppointments}from'./AppointmentsContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CreateAppointment(){const[patientName,setPatientName]=useState('');const[testType,setTestType]=useState('');const[radType,setRadType]=useState('');// New state for Rad type\nconst[urgency,setUrgency]=useState('');// New state for Urgency\nconst{addAppointment}=useAppointments();const handleSubmit=async e=>{e.preventDefault();const appointmentData={patient_name:patientName,test_type:testType,rad_type:radType,urgency:urgency};await addAppointment(appointmentData);// Now awaiting the async operation\n// Reset form fields here if needed\n};return/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-field\",value:patientName,onChange:e=>setPatientName(e.target.value),placeholder:\"Nombre del paciente\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-field\",value:testType,onChange:e=>setTestType(e.target.value),placeholder:\"Observaciones\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-field\",value:radType,onChange:e=>setRadType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Selecciona tipo de prueba\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Rayos X\",children:\"Rayos X\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Tomograf\\xEDa Computarizada (TC o TAC)\",children:\"Tomograf\\xEDa Computarizada (TC o TAC)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Resonancia Magn\\xE9tica (RM o MRI)\",children:\"Resonancia Magn\\xE9tica (RM o MRI)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Ecograf\\xEDa (Ultrasonograf\\xEDa)\",children:\"Ecograf\\xEDa (Ultrasonograf\\xEDa)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Mamograf\\xEDa\",children:\"Mamograf\\xEDa\"})]}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-field\",value:urgency,onChange:e=>setUrgency(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Grado de urgencia\"}),[...Array(5).keys()].map(num=>/*#__PURE__*/_jsx(\"option\",{value:num,children:num},num))]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"form-button\",children:\"Programar cita\"})]})});}export default CreateAppointment;","map":{"version":3,"names":["React","useState","useAppointments","jsx","_jsx","jsxs","_jsxs","CreateAppointment","patientName","setPatientName","testType","setTestType","radType","setRadType","urgency","setUrgency","addAppointment","handleSubmit","e","preventDefault","appointmentData","patient_name","test_type","rad_type","className","children","onSubmit","type","value","onChange","target","placeholder","Array","keys","map","num"],"sources":["C:/Users/tosag/OneDrive/Escritorio/My projects/Python scripts/Diagnostrum/React_Diagnostrum/src/CreateAppointment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CreateAppointment.css';\r\nimport { useAppointments } from './AppointmentsContext';\r\n\r\nfunction CreateAppointment() {\r\n    const [patientName, setPatientName] = useState('');\r\n    const [testType, setTestType] = useState('');\r\n    const [radType, setRadType] = useState(''); // New state for Rad type\r\n    const [urgency, setUrgency] = useState(''); // New state for Urgency\r\n    const { addAppointment } = useAppointments();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const appointmentData = {\r\n            patient_name: patientName,\r\n            test_type: testType,\r\n            rad_type: radType,\r\n            urgency: urgency,\r\n        };\r\n        await addAppointment(appointmentData); // Now awaiting the async operation\r\n        // Reset form fields here if needed\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-field\"\r\n              value={patientName}\r\n              onChange={(e) => setPatientName(e.target.value)}\r\n              placeholder=\"Nombre del paciente\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-field\"\r\n              value={testType}\r\n              onChange={(e) => setTestType(e.target.value)}\r\n              placeholder=\"Observaciones\"\r\n            />\r\n            {/* Rad Type Dropdown */}\r\n            <select\r\n              className=\"form-field\"\r\n              value={radType}\r\n              onChange={(e) => setRadType(e.target.value)}\r\n            >\r\n              <option value=\"\">Selecciona tipo de prueba</option>\r\n              <option value=\"Rayos X\">Rayos X</option>\r\n              <option value=\"Tomografía Computarizada (TC o TAC)\">Tomografía Computarizada (TC o TAC)</option>\r\n              <option value=\"Resonancia Magnética (RM o MRI)\">Resonancia Magnética (RM o MRI)</option>\r\n              <option value=\"Ecografía (Ultrasonografía)\">Ecografía (Ultrasonografía)</option>\r\n              <option value=\"Mamografía\">Mamografía</option>\r\n            </select>\r\n            {/* Urgency Dropdown */}\r\n            <select\r\n              className=\"form-field\"\r\n              value={urgency}\r\n              onChange={(e) => setUrgency(e.target.value)}\r\n            >\r\n              <option value=\"\">Grado de urgencia</option>\r\n              {[...Array(5).keys()].map((num) => (\r\n                <option key={num} value={num}>{num}</option>\r\n              ))}\r\n            </select>\r\n            <button type=\"submit\" className=\"form-button\">Programar cita</button>\r\n          </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateAppointment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}