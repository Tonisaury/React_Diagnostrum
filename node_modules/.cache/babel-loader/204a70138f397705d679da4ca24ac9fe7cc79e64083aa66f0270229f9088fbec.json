{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tosag\\\\OneDrive\\\\Escritorio\\\\My projects\\\\Python scripts\\\\Diagnostrum\\\\React_Diagnostrum\\\\src\\\\CreateAppointment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CreateAppointment.css';\nimport { useAppointments } from './AppointmentsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateAppointment() {\n  _s();\n  const [patientName, setPatientName] = useState('');\n  const [testType, setTestType] = useState('');\n  const [radType, setRadType] = useState(''); // New state for Rad type\n  const [urgency, setUrgency] = useState(''); // New state for Urgency\n  const {\n    addAppointment\n  } = useAppointments();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const appointmentData = {\n      patient_name: patientName,\n      test_type: testType,\n      rad_type: radType,\n      urgency: urgency\n    };\n    await addAppointment(appointmentData); // Now awaiting the async operation\n    // Reset form fields here if needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-field\",\n        value: patientName,\n        onChange: e => setPatientName(e.target.value),\n        placeholder: \"Nombre del paciente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-field\",\n        value: testType,\n        onChange: e => setTestType(e.target.value),\n        placeholder: \"Observaciones\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-field\",\n        value: radType,\n        onChange: e => setRadType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecciona tipo de prueba\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Rayos X\",\n          children: \"Rayos X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Tomograf\\xEDa Computarizada (TC o TAC)\",\n          children: \"Tomograf\\xEDa Computarizada (TC o TAC)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Resonancia Magn\\xE9tica (RM o MRI)\",\n          children: \"Resonancia Magn\\xE9tica (RM o MRI)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Ecogrddddaf\\xEDa (Ultrasonograf\\xEDa)\",\n          children: \"Ecograf\\xEDa (Ultrasonograf\\xEDa)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Mamograf\\xEDa\",\n          children: \"Mamograf\\xEDa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-field\",\n        value: urgency,\n        onChange: e => setUrgency(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Grado de urgencia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), [...Array(5).keys()].map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: num,\n          children: num\n        }, num, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form-button\",\n        children: \"Programar cita\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateAppointment, \"/z9n6vaxQ0ukMBm8Jv+Ewv/Dyhs=\", false, function () {\n  return [useAppointments];\n});\n_c = CreateAppointment;\nexport default CreateAppointment;\nvar _c;\n$RefreshReg$(_c, \"CreateAppointment\");","map":{"version":3,"names":["React","useState","useAppointments","jsxDEV","_jsxDEV","CreateAppointment","_s","patientName","setPatientName","testType","setTestType","radType","setRadType","urgency","setUrgency","addAppointment","handleSubmit","e","preventDefault","appointmentData","patient_name","test_type","rad_type","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","Array","keys","map","num","_c","$RefreshReg$"],"sources":["C:/Users/tosag/OneDrive/Escritorio/My projects/Python scripts/Diagnostrum/React_Diagnostrum/src/CreateAppointment.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CreateAppointment.css';\r\nimport { useAppointments } from './AppointmentsContext';\r\n\r\nfunction CreateAppointment() {\r\n    const [patientName, setPatientName] = useState('');\r\n    const [testType, setTestType] = useState('');\r\n    const [radType, setRadType] = useState(''); // New state for Rad type\r\n    const [urgency, setUrgency] = useState(''); // New state for Urgency\r\n    const { addAppointment } = useAppointments();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const appointmentData = {\r\n            patient_name: patientName,\r\n            test_type: testType,\r\n            rad_type: radType,\r\n            urgency: urgency,\r\n        };\r\n        await addAppointment(appointmentData); // Now awaiting the async operation\r\n        // Reset form fields here if needed\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-field\"\r\n              value={patientName}\r\n              onChange={(e) => setPatientName(e.target.value)}\r\n              placeholder=\"Nombre del paciente\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-field\"\r\n              value={testType}\r\n              onChange={(e) => setTestType(e.target.value)}\r\n              placeholder=\"Observaciones\"\r\n            />\r\n            {/* Rad Type Dropdown */}\r\n            <select\r\n              className=\"form-field\"\r\n              value={radType}\r\n              onChange={(e) => setRadType(e.target.value)}\r\n            >\r\n              <option value=\"\">Selecciona tipo de prueba</option>\r\n              <option value=\"Rayos X\">Rayos X</option>\r\n              <option value=\"Tomografía Computarizada (TC o TAC)\">Tomografía Computarizada (TC o TAC)</option>\r\n              <option value=\"Resonancia Magnética (RM o MRI)\">Resonancia Magnética (RM o MRI)</option>\r\n              <option value=\"Ecogrddddafía (Ultrasonografía)\">Ecografía (Ultrasonografía)</option>\r\n              <option value=\"Mamografía\">Mamografía</option>\r\n            </select>\r\n            {/* Urgency Dropdown */}\r\n            <select\r\n              className=\"form-field\"\r\n              value={urgency}\r\n              onChange={(e) => setUrgency(e.target.value)}\r\n            >\r\n              <option value=\"\">Grado de urgencia</option>\r\n              {[...Array(5).keys()].map((num) => (\r\n                <option key={num} value={num}>{num}</option>\r\n              ))}\r\n            </select>\r\n            <button type=\"submit\" className=\"form-button\">Programar cita</button>\r\n          </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateAppointment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}